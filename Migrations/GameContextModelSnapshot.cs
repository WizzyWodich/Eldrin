// <auto-generated />
using System;
using Eldrin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eldrin.Migrations
{
    [DbContext(typeof(GameContext))]
    partial class GameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Eldrin.Data.Models.Corpse", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeathTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Corpses");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Item", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("CorpseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Durability")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CorpseId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Player", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Agility")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscordId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hunger")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Magic")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("RaceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Race", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgilityBonus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HealthBonus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MagicBonus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartingCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StrengthBonus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            AgilityBonus = 5,
                            HealthBonus = 10,
                            MagicBonus = 5,
                            Name = "Эльф",
                            StartingCity = "Эльфийский Лес",
                            StrengthBonus = 0
                        },
                        new
                        {
                            Id = 2u,
                            AgilityBonus = 0,
                            HealthBonus = 0,
                            MagicBonus = 0,
                            Name = "Человек",
                            StartingCity = "Город Людей",
                            StrengthBonus = 5
                        },
                        new
                        {
                            Id = 3u,
                            AgilityBonus = 0,
                            HealthBonus = 20,
                            MagicBonus = 0,
                            Name = "Гном",
                            StartingCity = "Гномий Форпост",
                            StrengthBonus = 5
                        },
                        new
                        {
                            Id = 4u,
                            AgilityBonus = 3,
                            HealthBonus = 15,
                            MagicBonus = 0,
                            Name = "Лизардмен",
                            StartingCity = "Болотные Хижины",
                            StrengthBonus = 5
                        });
                });

            modelBuilder.Entity("PlayerItem", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerItems");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Corpse", b =>
                {
                    b.HasOne("Eldrin.Data.Models.Player", "Player")
                        .WithMany("Corpses")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Item", b =>
                {
                    b.HasOne("Eldrin.Data.Models.Corpse", null)
                        .WithMany("Items")
                        .HasForeignKey("CorpseId");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Player", b =>
                {
                    b.HasOne("Eldrin.Data.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Race");
                });

            modelBuilder.Entity("PlayerItem", b =>
                {
                    b.HasOne("Eldrin.Data.Models.Item", "Item")
                        .WithMany("PlayerItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eldrin.Data.Models.Player", "Player")
                        .WithMany("PlayerItems")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Corpse", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Item", b =>
                {
                    b.Navigation("PlayerItems");
                });

            modelBuilder.Entity("Eldrin.Data.Models.Player", b =>
                {
                    b.Navigation("Corpses");

                    b.Navigation("PlayerItems");
                });
#pragma warning restore 612, 618
        }
    }
}
